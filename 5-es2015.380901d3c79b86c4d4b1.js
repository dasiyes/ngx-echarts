(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"+VE6":function(n,e,a){"use strict";a.r(e);var t=a("fXoL"),o=a("ofXK"),i=a("tk/3"),r=a("7PmN"),l=a("tyNb"),s=a("MT78"),m=a("44PX"),d=a("giWl"),c=a("lR5k");const p=[1,"card","card-accent-info"],u=[1,"card-body"],h=[1,"card-title"],g=[1,"mt-4"],v=["heading","demo"],b=["echarts","",1,"demo-chart",3,"options","loading"],y=["heading","html"],f=[3,"data"],x=["heading","component"];let w=(()=>{class n{constructor(n){this.http=n,this.demo_html=a("JgwV"),this.demo_ts=a("fYvU"),this.mapLoaded=!1,this.options={}}ngOnInit(){this.http.get("assets/data/HK.json").subscribe(n=>{this.mapLoaded=!0,s.registerMap("HK",n),this.options={title:{text:"\u9999\u6e2f18\u533a\u4eba\u53e3\u5bc6\u5ea6 \uff082011\uff09",subtext:"\u4eba\u53e3\u5bc6\u5ea6\u6570\u636e\u6765\u81eaWikipedia",sublink:"http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12"},tooltip:{trigger:"item",formatter:"{b}<br/>{c} (p / km2)"},toolbox:{show:!0,orient:"vertical",left:"right",top:"center",feature:{dataView:{readOnly:!1},restore:{},saveAsImage:{}}},visualMap:{min:800,max:5e4,text:["High","Low"],realtime:!1,calculable:!0,inRange:{color:["lightskyblue","yellow","orangered"]}},series:[{name:"\u9999\u6e2f18\u533a\u4eba\u53e3\u5bc6\u5ea6",type:"map",mapType:"HK",itemStyle:{normal:{label:{show:!0}},emphasis:{label:{show:!0}}},data:[{name:"\u4e2d\u897f\u533a",value:20057.34},{name:"\u6e7e\u4ed4",value:15477.48},{name:"\u4e1c\u533a",value:31686.1},{name:"\u5357\u533a",value:6992.6},{name:"\u6cb9\u5c16\u65fa",value:44045.49},{name:"\u6df1\u6c34\u57d7",value:40689.64},{name:"\u4e5d\u9f99\u57ce",value:37659.78},{name:"\u9ec4\u5927\u4ed9",value:45180.97},{name:"\u89c2\u5858",value:55204.26},{name:"\u8475\u9752",value:21900.9},{name:"\u8343\u6e7e",value:4918.26},{name:"\u5c6f\u95e8",value:5881.84},{name:"\u5143\u6717",value:4178.01},{name:"\u5317\u533a",value:2227.92},{name:"\u5927\u57d4",value:2180.98},{name:"\u6c99\u7530",value:9172.94},{name:"\u897f\u8d21",value:3368},{name:"\u79bb\u5c9b",value:806.98}],nameMap:{"Central and Western":"\u4e2d\u897f\u533a",Eastern:"\u4e1c\u533a",Islands:"\u79bb\u5c9b","Kowloon City":"\u4e5d\u9f99\u57ce","Kwai Tsing":"\u8475\u9752","Kwun Tong":"\u89c2\u5858",North:"\u5317\u533a","Sai Kung":"\u897f\u8d21","Sha Tin":"\u6c99\u7530","Sham Shui Po":"\u6df1\u6c34\u57d7",Southern:"\u5357\u533a","Tai Po":"\u5927\u57d4","Tsuen Wan":"\u8343\u6e7e","Tuen Mun":"\u5c6f\u95e8","Wan Chai":"\u6e7e\u4ed4","Wong Tai Sin":"\u9ec4\u5927\u4ed9","Yau Tsim Mong":"\u6cb9\u5c16\u65fa","Yuen Long":"\u5143\u6717"}}]}})}}return n.ngComponentDef=t.Hb({type:n,selectors:[["app-hongkong-pd"]],factory:function(e){return new(e||n)(t.Nb(i.a))},consts:14,vars:10,template:function(n,e){1&n&&(t.Rb(0,"div",p),t.Rb(1,"div",u),t.Rb(2,"h4",h),t.tc(3,"Population Density of HongKong (2011)"),t.Pb(),t.Rb(4,"div",g),t.Rb(5,"tabset"),t.Rb(6,"tab",v),t.Ob(7,"div",b),t.Pb(),t.Rb(8,"tab",y),t.Ob(9,"markdown",f),t.ac(10,"language"),t.Pb(),t.Rb(11,"tab",x),t.Ob(12,"markdown",f),t.ac(13,"language"),t.Pb(),t.Pb(),t.Pb(),t.Pb(),t.Pb()),2&n&&(t.mc(7),t.fc("options",e.options)("loading",!e.mapLoaded),t.mc(9),t.fc("data",t.cc(10,4,e.demo_html,"html")),t.mc(12),t.fc("data",t.cc(13,7,e.demo_ts,"typescript")))},directives:[m.d,m.a,d.a,c.b],pipes:[c.a],styles:[""]}),n})();const S={tooltip:{trigger:"item",triggerOn:"mousemove"},legend:{top:"2%",left:"3%",orient:"vertical",data:[{name:"tree1",icon:"rectangle"},{name:"tree2",icon:"rectangle"}],borderColor:"#c23531"},series:[{type:"tree",name:"tree1",data:[],top:"5%",left:"7%",bottom:"2%",right:"60%",symbolSize:7,label:{normal:{position:"left",verticalAlign:"middle",align:"right"}},leaves:{label:{normal:{position:"right",verticalAlign:"middle",align:"left"}}},expandAndCollapse:!0,animationDuration:550,animationDurationUpdate:750},{type:"tree",name:"tree2",data:[],top:"20%",left:"60%",bottom:"22%",right:"18%",symbolSize:7,label:{normal:{position:"left",verticalAlign:"middle",align:"right"}},leaves:{label:{normal:{position:"right",verticalAlign:"middle",align:"left"}}},expandAndCollapse:!0,animationDuration:550,animationDurationUpdate:750}]},O={name:"flare",children:[{name:"data",children:[{name:"converters",children:[{name:"Converters",value:721},{name:"DelimitedTextConverter",value:4294}]},{name:"DataUtil",value:3322}]},{name:"display",children:[{name:"DirtySprite",value:8833},{name:"LineSprite",value:1732},{name:"RectSprite",value:3623}]},{name:"flex",children:[{name:"FlareVis",value:4116}]},{name:"query",children:[{name:"AggregateExpression",value:1616},{name:"And",value:1027},{name:"Arithmetic",value:3891},{name:"Average",value:891},{name:"BinaryExpression",value:2893},{name:"Comparison",value:5103},{name:"CompositeExpression",value:3677},{name:"Count",value:781},{name:"DateUtil",value:4141},{name:"Distinct",value:933},{name:"Expression",value:5130},{name:"ExpressionIterator",value:3617},{name:"Fn",value:3240},{name:"If",value:2732},{name:"IsA",value:2039},{name:"Literal",value:1214},{name:"Match",value:3748},{name:"Maximum",value:843},{name:"methods",children:[{name:"add",value:593},{name:"and",value:330},{name:"average",value:287},{name:"count",value:277},{name:"distinct",value:292},{name:"div",value:595},{name:"eq",value:594},{name:"fn",value:460},{name:"gt",value:603},{name:"gte",value:625},{name:"iff",value:748},{name:"isa",value:461},{name:"lt",value:597},{name:"lte",value:619},{name:"max",value:283},{name:"min",value:283},{name:"mod",value:591},{name:"mul",value:603},{name:"neq",value:599},{name:"not",value:386},{name:"or",value:323},{name:"orderby",value:307},{name:"range",value:772},{name:"select",value:296},{name:"stddev",value:363},{name:"sub",value:600},{name:"sum",value:280},{name:"update",value:307},{name:"variance",value:335},{name:"where",value:299},{name:"xor",value:354},{name:"_",value:264}]},{name:"Minimum",value:843},{name:"Not",value:1554},{name:"Or",value:970},{name:"Query",value:13896},{name:"Range",value:1594},{name:"StringUtil",value:4130},{name:"Sum",value:791},{name:"Variable",value:1124},{name:"Variance",value:1876},{name:"Xor",value:1101}]},{name:"scale",children:[{name:"IScaleMap",value:2105},{name:"LinearScale",value:1316},{name:"LogScale",value:3151},{name:"OrdinalScale",value:3770},{name:"QuantileScale",value:2435},{name:"QuantitativeScale",value:4839},{name:"RootScale",value:1756},{name:"Scale",value:4268},{name:"ScaleType",value:1821},{name:"TimeScale",value:5833}]}]},C={name:"flare",children:[{name:"flex",children:[{name:"FlareVis",value:4116}]},{name:"scale",children:[{name:"IScaleMap",value:2105},{name:"LinearScale",value:1316},{name:"LogScale",value:3151},{name:"OrdinalScale",value:3770},{name:"QuantileScale",value:2435},{name:"QuantitativeScale",value:4839},{name:"RootScale",value:1756},{name:"Scale",value:4268},{name:"ScaleType",value:1821},{name:"TimeScale",value:5833}]},{name:"display",children:[{name:"DirtySprite",value:8833}]}]},P=[1,"card","card-accent-info"],D=[1,"card-body"],_=[1,"card-title"],I=[1,"mt-4"],R=["heading","demo"],T=["echarts","",2,"height","600px",3,"options","merge"],k=["heading","html"],A=[3,"data"],E=["heading","component"],L=["heading","options"];let N=(()=>{class n{constructor(){this.demo_html=a("Nvaw"),this.demo_ts=a("XE6o"),this.demo_option=a("Yl6+"),this.options=S,this.mergeData=null}ngOnInit(){S.series[0].data=[O],S.series[1].data=[C],this.mergeData={series:S.series}}}return n.ngComponentDef=t.Hb({type:n,selectors:[["app-official-demo"]],factory:function(e){return new(e||n)},consts:17,vars:14,template:function(n,e){1&n&&(t.Rb(0,"div",P),t.Rb(1,"div",D),t.Rb(2,"h4",_),t.tc(3,"Official Demo (ECharts v3.8)"),t.Pb(),t.Rb(4,"div",I),t.Rb(5,"tabset"),t.Rb(6,"tab",R),t.Ob(7,"div",T),t.Pb(),t.Rb(8,"tab",k),t.Ob(9,"markdown",A),t.ac(10,"language"),t.Pb(),t.Rb(11,"tab",E),t.Ob(12,"markdown",A),t.ac(13,"language"),t.Pb(),t.Rb(14,"tab",L),t.Ob(15,"markdown",A),t.ac(16,"language"),t.Pb(),t.Pb(),t.Pb(),t.Pb(),t.Pb()),2&n&&(t.mc(7),t.fc("options",e.options)("merge",e.mergeData),t.mc(9),t.fc("data",t.cc(10,5,e.demo_html,"html")),t.mc(12),t.fc("data",t.cc(13,8,e.demo_ts,"typescript")),t.mc(15),t.fc("data",t.cc(16,11,e.demo_option,"typescript")))},directives:[m.d,m.a,d.a,c.b],pipes:[c.a],styles:[""]}),n})();var M=a("lJxs"),z=a("9GqQ");const U=[1,"card","card-accent-info"],q=[1,"card-body"],H=["echarts","",2,"height","600px",3,"options"],F=[1,"row","mt-4"],j=[1,"col"],B=["heading","html"],K=[3,"data"],V=["heading","component"];let W=(()=>{class n{constructor(n){this.http=n,this.demo_html=a("5hff"),this.demo_ts=a("eolA")}ngOnInit(){this.options=this.http.get("assets/data/les-miserables.gexf",{responseType:"text"}).pipe(Object(M.a)(n=>{const e=Object(z.parse)(n),a=[];for(let t=0;t<9;t++)a[t]={name:"category"+t};return e.nodes.forEach((function(n){n.itemStyle=null,n.symbolSize=10,n.value=n.symbolSize,n.category=n.attributes.modularity_class,n.x=n.y=null,n.draggable=!0})),{title:{text:"Les Miserables",subtext:"Default layout",top:"bottom",left:"right"},tooltip:{},legend:[{data:a.map((function(n){return n.name}))}],animation:!1,series:[{name:"Les Miserables",type:"graph",layout:"force",data:e.nodes,links:e.links,categories:a,roam:!0,label:{normal:{position:"right"}},force:{repulsion:100}}]}}))}}return n.ngComponentDef=t.Hb({type:n,selectors:[["app-graph-force-layout-demo"]],factory:function(e){return new(e||n)(t.Nb(i.a))},consts:13,vars:11,template:function(n,e){1&n&&(t.Rb(0,"div",U),t.Rb(1,"div",q),t.Ob(2,"div",H),t.ac(3,"async"),t.Pb(),t.Pb(),t.Rb(4,"div",F),t.Rb(5,"div",j),t.Rb(6,"tabset"),t.Rb(7,"tab",B),t.Ob(8,"markdown",K),t.ac(9,"language"),t.Pb(),t.Rb(10,"tab",V),t.Ob(11,"markdown",K),t.ac(12,"language"),t.Pb(),t.Pb(),t.Pb(),t.Pb()),2&n&&(t.mc(2),t.fc("options",t.bc(3,3,e.options)),t.mc(8),t.fc("data",t.cc(9,5,e.demo_html,"html")),t.mc(11),t.fc("data",t.cc(12,8,e.demo_ts,"typescript")))},directives:[d.a,m.d,m.a,c.b],pipes:[o.b,c.a],styles:[""]}),n})();const Y=[1,"card","card-accent-info"],Q=[1,"card-body"],X=["echarts","",1,"demo-chart",3,"options"],G=[1,"row","mt-4"],J=[1,"col"],Z=["heading","html"],$=[3,"data"],nn=["heading","component"];let en=(()=>{class n{constructor(){this.demo_html=a("v+jR"),this.demo_ts=a("cSxc"),this.options={title:{text:"Simple Graph"},tooltip:{},animationDurationUpdate:1500,animationEasingUpdate:"quinticInOut",series:[{type:"graph",layout:"none",symbolSize:60,roam:!0,label:{normal:{show:!0}},edgeSymbol:["circle","arrow"],edgeSymbolSize:[4,10],edgeLabel:{normal:{textStyle:{fontSize:20}}},data:[{name:"Node 1",x:300,y:300},{name:"Node 2",x:800,y:300},{name:"Node 3",x:550,y:100},{name:"Node 4",x:550,y:500}],links:[{source:0,target:1,symbolSize:[5,20],label:{normal:{show:!0}},lineStyle:{normal:{width:5,curveness:.2}}},{source:"Node 2",target:"Node 1",label:{normal:{show:!0}},lineStyle:{normal:{curveness:.2}}},{source:"Node 1",target:"Node 3"},{source:"Node 2",target:"Node 3"},{source:"Node 2",target:"Node 4"},{source:"Node 1",target:"Node 4"}],lineStyle:{normal:{opacity:.9,width:2,curveness:0}}}]}}ngOnInit(){}}return n.ngComponentDef=t.Hb({type:n,selectors:[["app-graph-simple-demo"]],factory:function(e){return new(e||n)},consts:12,vars:9,template:function(n,e){1&n&&(t.Rb(0,"div",Y),t.Rb(1,"div",Q),t.Ob(2,"div",X),t.Pb(),t.Pb(),t.Rb(3,"div",G),t.Rb(4,"div",J),t.Rb(5,"tabset"),t.Rb(6,"tab",Z),t.Ob(7,"markdown",$),t.ac(8,"language"),t.Pb(),t.Rb(9,"tab",nn),t.Ob(10,"markdown",$),t.ac(11,"language"),t.Pb(),t.Pb(),t.Pb(),t.Pb()),2&n&&(t.mc(2),t.fc("options",e.options),t.mc(7),t.fc("data",t.cc(8,3,e.demo_html,"html")),t.mc(10),t.fc("data",t.cc(11,6,e.demo_ts,"typescript")))},directives:[d.a,m.d,m.a,c.b],pipes:[c.a],styles:[""]}),n})();const an="import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n/** echarts extensions: */\nimport 'echarts-gl';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n",tn='{\n  ...\n  "paths": {\n+    "echarts": [\n+      "node_modules/echarts/dist/echarts.min.js"\n+    ],\n+    "echarts-gl": [\n+      "node_modules/echarts-gl/dist/echarts-gl.min.js"\n+    ],\n  }\n}\n\n',on=[1,"card","card-accent-info"],rn=[1,"card-body"],ln=["echarts","",2,"height","600px",3,"options"],sn=[1,"row","mt-4"],mn=[1,"col"],dn=["heading","html"],cn=[3,"data"],pn=["heading","component"],un=["heading","main.ts"],hn=["heading","tsconfig.json"];let gn=(()=>{class n{constructor(n){this.http=n,this.demo_html=a("LiXS"),this.demo_ts=a("lkLT"),this.demo_main=an,this.demo_config=tn}ngOnInit(){this.options=this.http.get("assets/data/life-expectancy-table.json",{responseType:"json"}).pipe(Object(M.a)(n=>({grid3D:{},tooltip:{},xAxis3D:{type:"category"},yAxis3D:{type:"category"},zAxis3D:{},visualMap:{max:1e8,dimension:"Population"},dataset:{dimensions:["Income","Life Expectancy","Population","Country",{name:"Year",type:"ordinal"}],source:n},series:[{type:"bar3D",shading:"lambert",encode:{x:"Year",y:"Country",z:"Life Expectancy",tooltip:[0,1,2,3,4]}}]})))}}return n.ngComponentDef=t.Hb({type:n,selectors:[["app-bar3d-demo"]],factory:function(e){return new(e||n)(t.Nb(i.a))},consts:19,vars:19,template:function(n,e){1&n&&(t.Rb(0,"div",on),t.Rb(1,"div",rn),t.Ob(2,"div",ln),t.ac(3,"async"),t.Pb(),t.Pb(),t.Rb(4,"div",sn),t.Rb(5,"div",mn),t.Rb(6,"tabset"),t.Rb(7,"tab",dn),t.Ob(8,"markdown",cn),t.ac(9,"language"),t.Pb(),t.Rb(10,"tab",pn),t.Ob(11,"markdown",cn),t.ac(12,"language"),t.Pb(),t.Rb(13,"tab",un),t.Ob(14,"markdown",cn),t.ac(15,"language"),t.Pb(),t.Rb(16,"tab",hn),t.Ob(17,"markdown",cn),t.ac(18,"language"),t.Pb(),t.Pb(),t.Pb(),t.Pb()),2&n&&(t.mc(2),t.fc("options",t.bc(3,5,e.options)),t.mc(8),t.fc("data",t.cc(9,7,e.demo_html,"html")),t.mc(11),t.fc("data",t.cc(12,10,e.demo_ts,"typescript")),t.mc(14),t.fc("data",t.cc(15,13,e.demo_main,"typescript")),t.mc(17),t.fc("data",t.cc(18,16,e.demo_config,"diff")))},directives:[d.a,m.d,m.a,c.b],pipes:[o.b,c.a],styles:[""]}),n})();const vn=[1,"card","card-accent-info"],bn=[1,"card-body"],yn=[1,"card-title"],fn=[1,"mt-4"],xn=["heading","demo"],wn=[1,"row"],Sn=[1,"col-md-6"],On=["id","chart1","echarts","","theme","macarons",1,"demo-chart",3,"options"],Cn=["id","chart2","echarts","","theme","macarons",1,"demo-chart",3,"options"],Pn=["heading","html"],Dn=[3,"data"],_n=["heading","component"],In={color:["#3398DB"],tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:[{type:"category",data:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],axisTick:{alignWithLabel:!0}}],yAxis:[{type:"value"}],series:[{name:"Counters",type:"bar",barWidth:"60%",data:[10,52,200,334,390,330,220]}]},Rn=[1,"card","card-accent-info"],Tn=[1,"card-body"],kn=[1,"card-title"],An=[1,"mt-4"],En=["heading","demo"],Ln=["echarts","",2,"height","600px",3,"options","chartInit"],Nn=["heading","html"],Mn=[3,"data"],zn=["heading","component"],Un=["heading","types.d.ts"],qn=20,Hn=[[15,0],[-50,10],[-56.5,20],[-46.5,30],[-22.1,40]],Fn=[{path:"advanced/connect-charts",component:(()=>{class n{constructor(){this.demo_html=a("xt61"),this.demo_ts=a("godf"),this.options=In}ngOnInit(){}ngAfterViewInit(){setTimeout(()=>{const n=document.getElementById("chart1"),e=document.getElementById("chart2"),a=Object(s.getInstanceByDom)(n),t=Object(s.getInstanceByDom)(e);Object(s.connect)([a,t])})}}return n.ngComponentDef=t.Hb({type:n,selectors:[["app-connect-charts"]],factory:function(e){return new(e||n)},consts:22,vars:10,template:function(n,e){1&n&&(t.Rb(0,"div",vn),t.Rb(1,"div",bn),t.Rb(2,"h4",yn),t.tc(3,"Connect 2 Charts"),t.Pb(),t.Rb(4,"div",fn),t.Rb(5,"tabset"),t.Rb(6,"tab",xn),t.Rb(7,"div",wn),t.Rb(8,"div",Sn),t.Rb(9,"h5"),t.tc(10," id=chart1 "),t.Pb(),t.Ob(11,"div",On),t.Pb(),t.Rb(12,"div",Sn),t.Rb(13,"h5"),t.tc(14," id=chart2 "),t.Pb(),t.Ob(15,"div",Cn),t.Pb(),t.Pb(),t.Pb(),t.Rb(16,"tab",Pn),t.Ob(17,"markdown",Dn),t.ac(18,"language"),t.Pb(),t.Rb(19,"tab",_n),t.Ob(20,"markdown",Dn),t.ac(21,"language"),t.Pb(),t.Pb(),t.Pb(),t.Pb(),t.Pb()),2&n&&(t.mc(11),t.fc("options",e.options),t.mc(15),t.fc("options",e.options),t.mc(17),t.fc("data",t.cc(18,4,e.demo_html,"html")),t.mc(20),t.fc("data",t.cc(21,7,e.demo_ts,"typescript")))},directives:[m.d,m.a,d.a,c.b],pipes:[c.a],styles:[""]}),n})(),data:{title:"Connect Charts"}},{path:"advanced/line-draggable",component:(()=>{class n{constructor(){this.demo_html=a("/tsB"),this.demo_ts=a("XUuO"),this.demo_types=a("i9Qy"),this.options={title:{text:"Try Dragging these Points"},tooltip:{triggerOn:"none",formatter:n=>"X: "+n.data[0].toFixed(2)+"<br>Y: "+n.data[1].toFixed(2)},grid:{},xAxis:{min:-100,max:80,type:"value",axisLine:{onZero:!1}},yAxis:{min:-30,max:60,type:"value",axisLine:{onZero:!1}},dataZoom:[{type:"slider",xAxisIndex:0,filterMode:"empty"},{type:"slider",yAxisIndex:0,filterMode:"empty"},{type:"inside",xAxisIndex:0,filterMode:"empty"},{type:"inside",yAxisIndex:0,filterMode:"empty"}],series:[{id:"a",type:"line",smooth:!0,symbolSize:qn,data:Hn}]}}ngOnInit(){}ngOnDestroy(){this.updatePosition&&window.removeEventListener("resize",this.updatePosition)}onChartReady(n){const e=function(e){Hn[e]=n.convertFromPixel({gridIndex:0},this.position),n.setOption({series:[{id:"a",data:Hn}]})},a=function(e){n.dispatchAction({type:"showTip",seriesIndex:0,dataIndex:e})},t=function(){n.dispatchAction({type:"hideTip"})},o=function(){n.setOption({graphic:s.util.map(Hn,(function(e){return{position:n.convertToPixel({gridIndex:0},e)}}))})};window.addEventListener("resize",o),n.on("dataZoom",o),this.updatePosition=o,setTimeout(()=>{n.setOption({graphic:s.util.map(Hn,(o,i)=>({type:"circle",position:n.convertToPixel({gridIndex:0},o),shape:{cx:0,cy:0,r:qn/2},invisible:!0,draggable:!0,ondrag:s.util.curry(e,i),onmousemove:s.util.curry(a,i),onmouseout:s.util.curry(t,i),z:100}))})},0)}}return n.ngComponentDef=t.Hb({type:n,selectors:[["app-line-draggable"]],factory:function(e){return new(e||n)},consts:17,vars:13,template:function(n,e){1&n&&(t.Rb(0,"div",Rn),t.Rb(1,"div",Tn),t.Rb(2,"h4",kn),t.tc(3,"Draggable Line Chart"),t.Pb(),t.Rb(4,"div",An),t.Rb(5,"tabset"),t.Rb(6,"tab",En),t.Rb(7,"div",Ln),t.Xb("chartInit",(function(n){return e.onChartReady(n)})),t.Pb(),t.Pb(),t.Rb(8,"tab",Nn),t.Ob(9,"markdown",Mn),t.ac(10,"language"),t.Pb(),t.Rb(11,"tab",zn),t.Ob(12,"markdown",Mn),t.ac(13,"language"),t.Pb(),t.Rb(14,"tab",Un),t.Ob(15,"markdown",Mn),t.ac(16,"language"),t.Pb(),t.Pb(),t.Pb(),t.Pb(),t.Pb()),2&n&&(t.mc(7),t.fc("options",e.options),t.mc(9),t.fc("data",t.cc(10,4,e.demo_html,"html")),t.mc(12),t.fc("data",t.cc(13,7,e.demo_ts,"typescript")),t.mc(15),t.fc("data",t.cc(16,10,e.demo_types,"typescript")))},directives:[m.d,m.a,d.a,c.b],pipes:[c.a],styles:[""]}),n})(),data:{title:"Draggable Line Chart"}},{path:"map/hongkong-pd",component:w,data:{title:"Population Density of HongKong (2011)"}},{path:"tree/official-demo",component:N,data:{title:"Official Demo"}},{path:"graph/simple",component:en,data:{title:"Simple Graph"}},{path:"graph/force-layout",component:W,data:{title:"Force Layout"}},{path:"bar3d/bar3d-demo",component:gn,data:{title:"3D Bar with Dataset"}}];let jn=(()=>{class n{}return n.ngModuleDef=t.Lb({type:n}),n.ngInjectorDef=t.Kb({factory:function(e){return new(e||n)},imports:[[l.f.forChild(Fn)],l.f]}),n})();l.f.forChild(Fn),a.d(e,"DemoModule",(function(){return Bn}));let Bn=(()=>{class n{}return n.ngModuleDef=t.Lb({type:n}),n.ngInjectorDef=t.Kb({factory:function(e){return new(e||n)},imports:[[o.c,jn,r.a,i.b]]}),n})()},"/tsB":function(n,e){n.exports='<div class="card card-accent-info">\n  <div class="card-body">\n    <h4 class="card-title">Draggable Line Chart</h4>\n    <div class="mt-4">\n      <tabset>\n        <tab heading="demo">\n          <div echarts (chartInit)="onChartReady($event)" [options]="options" style="height: 600px;"></div>\n        </tab>\n        <tab heading="html">\n          <markdown [data]="demo_html | language: \'html\'"></markdown>\n        </tab>\n        <tab heading="component">\n          <markdown [data]="demo_ts | language: \'typescript\'"></markdown>\n        </tab>\n        <tab heading="types.d.ts">\n          <markdown [data]="demo_types | language: \'typescript\'"></markdown>\n        </tab>\n      </tabset>\n    </div>\n  </div>\n</div>\n  '},"5hff":function(n,e){n.exports='<div class="card card-accent-info">\n  <div class="card-body">\n    \x3c!-- Chart --\x3e\n    <div echarts [options]="options | async" style="height: 600px;"></div>\n  </div>\n</div>\n\n\x3c!-- Documents --\x3e\n<div class="row mt-4">\n  <div class="col">\n    <tabset>\n      <tab heading="html">\n        <markdown [data]="demo_html | language: \'html\'"></markdown>\n      </tab>\n      <tab heading="component">\n        <markdown [data]="demo_ts | language: \'typescript\'"></markdown>\n      </tab>\n    </tabset>\n  </div>\n</div>'},"9GqQ":function(n,e,a){var t=a("bYtY");function o(n,e){return n?t.map(s(n,"node"),(function(n){var a={id:r(n,"id"),name:r(n,"label"),itemStyle:{normal:{}}},t=l(n,"viz:size"),o=l(n,"viz:position"),i=l(n,"viz:color"),m=l(n,"attvalues");if(t&&(a.symbolSize=parseFloat(r(t,"value"))),o&&(a.x=parseFloat(r(o,"x")),a.y=parseFloat(r(o,"y"))),i&&(a.itemStyle.normal.color="rgb("+[0|r(i,"r"),0|r(i,"g"),0|r(i,"b")].join(",")+")"),m){var d=s(m,"attvalue");a.attributes={};for(var c=0;c<d.length;c++){var p=d[c],u=r(p,"for"),h=r(p,"value"),g=e[u];if(g){switch(g.type){case"integer":case"long":h=parseInt(h,10);break;case"float":case"double":h=parseFloat(h);break;case"boolean":h="true"==h.toLowerCase()}a.attributes[u]=h}}}return a})):[]}function i(n){return n?t.map(s(n,"edge"),(function(n){var e={id:r(n,"id"),name:r(n,"label"),source:r(n,"source"),target:r(n,"target"),lineStyle:{normal:{}}},a=e.lineStyle.normal,t=l(n,"viz:thickness"),o=l(n,"viz:color");return t&&(a.width=parseFloat(t.getAttribute("value"))),o&&(a.color="rgb("+[0|r(o,"r"),0|r(o,"g"),0|r(o,"b")].join(",")+")"),e})):[]}function r(n,e){return n.getAttribute(e)}function l(n,e){for(var a=n.firstChild;a;){if(1==a.nodeType&&a.nodeName.toLowerCase()==e.toLowerCase())return a;a=a.nextSibling}return null}function s(n,e){for(var a=n.firstChild,t=[];a;)a.nodeName.toLowerCase()==e.toLowerCase()&&t.push(a),a=a.nextSibling;return t}e.parse=function(n){var e;if(!(e="string"==typeof n?(new DOMParser).parseFromString(n,"text/xml"):n)||e.getElementsByTagName("parsererror").length)return null;var a=l(e,"gexf");if(!a)return null;for(var m,d=l(a,"graph"),c=(m=l(d,"attributes"))?t.map(s(m,"attribute"),(function(n){return{id:r(n,"id"),title:r(n,"title"),type:r(n,"type")}})):[],p={},u=0;u<c.length;u++)p[c[u].id]=c[u];return{nodes:o(l(d,"nodes"),p),links:i(l(d,"edges"))}}},JgwV:function(n,e){n.exports='<div class="card card-accent-info">\n  <div class="card-body">\n    <h4 class="card-title">Population Density of HongKong (2011)</h4>\n    <div class="mt-4">\n      <tabset>\n        <tab heading="demo">\n          <div echarts [options]="options" [loading]="!mapLoaded" class="demo-chart"></div>\n        </tab>\n        <tab heading="html">\n          <markdown [data]="demo_html | language: \'html\'"></markdown>\n        </tab>\n        <tab heading="component">\n          <markdown [data]="demo_ts | language: \'typescript\'"></markdown>\n        </tab>\n      </tabset>\n    </div>\n  </div>\n</div>\n  '},LiXS:function(n,e){n.exports='<div class="card card-accent-info">\n  <div class="card-body">\n    \x3c!-- Chart --\x3e\n    <div echarts [options]="options | async" style="height: 600px;"></div>\n  </div>\n</div>\n\n\x3c!-- Documents --\x3e\n<div class="row mt-4">\n  <div class="col">\n    <tabset>\n      <tab heading="html">\n        <markdown [data]="demo_html | language: \'html\'"></markdown>\n      </tab>\n      <tab heading="component">\n        <markdown [data]="demo_ts | language: \'typescript\'"></markdown>\n      </tab>\n      <tab heading="main.ts">\n        <markdown [data]="demo_main | language: \'typescript\'"></markdown>\n      </tab>\n      <tab heading="tsconfig.json">\n        <markdown [data]="demo_config | language: \'diff\'"></markdown>\n      </tab>\n    </tabset>\n  </div>\n</div>'},Nvaw:function(n,e){n.exports='<div class="card card-accent-info">\n  <div class="card-body">\n    <h4 class="card-title">Official Demo (ECharts v3.8)</h4>\n    <div class="mt-4">\n      <tabset>\n        <tab heading="demo">\n          <div echarts [options]="options" [merge]="mergeData" style="height: 600px;"></div>\n        </tab>\n        <tab heading="html">\n          <markdown [data]="demo_html | language: \'html\'"></markdown>\n        </tab>\n        <tab heading="component">\n          <markdown [data]="demo_ts | language: \'typescript\'"></markdown>\n        </tab>\n        <tab heading="options">\n          <markdown [data]="demo_option | language: \'typescript\'"></markdown>\n        </tab>\n      </tabset>\n    </div>\n  </div>\n</div>\n  '},XE6o:function(n,e){n.exports="import { Component, OnInit } from '@angular/core';\nimport { TREE_OPTION, TREE_DATA_1, TREE_DATA_2 } from './tree-option';\n\ndeclare const require: any;\n\n@Component({\n  selector: 'app-official-demo',\n  templateUrl: './official-demo.component.html',\n  styleUrls: ['./official-demo.component.scss']\n})\nexport class OfficialDemoComponent implements OnInit {\n  demo_html = require('!!html-loader!./official-demo.component.html');\n  demo_ts = require('!!raw-loader!./official-demo.component.ts');\n  demo_option = require('!!raw-loader!./tree-option.ts');\n  options = TREE_OPTION;\n  mergeData = null;\n\n  constructor() { }\n\n  ngOnInit() {\n    TREE_OPTION.series[0].data = [TREE_DATA_1];\n    TREE_OPTION.series[1].data = [TREE_DATA_2];\n\n    this.mergeData = {\n      series: TREE_OPTION.series\n    };\n  }\n\n}\n"},XUuO:function(n,e){n.exports="import { Component, OnInit, OnDestroy } from '@angular/core';\nimport * as echarts from 'echarts';\n\ndeclare const require: any;\n\nconst SymbolSize = 20;\nconst Data = [[15, 0], [-50, 10], [-56.5, 20], [-46.5, 30], [-22.1, 40]];\n\n@Component({\n  selector: 'app-line-draggable',\n  templateUrl: './line-draggable.component.html',\n  styleUrls: ['./line-draggable.component.scss']\n})\nexport class LineDraggableComponent implements OnInit, OnDestroy {\n  demo_html = require('!!html-loader!./line-draggable.component.html');\n  demo_ts = require('!!raw-loader!./line-draggable.component.ts');\n  demo_types = require('!!raw-loader!../../../../../types.d.ts');\n  updatePosition: () => void;\n  options = {\n    title: {\n      text: 'Try Dragging these Points'\n    },\n    tooltip: {\n      triggerOn: 'none',\n      formatter: (params) => {\n        return 'X: ' + params.data[0].toFixed(2) + '<br>Y: ' + params.data[1].toFixed(2);\n      }\n    },\n    grid: {\n    },\n    xAxis: {\n      min: -100,\n      max: 80,\n      type: 'value',\n      axisLine: { onZero: false }\n    },\n    yAxis: {\n      min: -30,\n      max: 60,\n      type: 'value',\n      axisLine: { onZero: false }\n    },\n    dataZoom: [\n      {\n        type: 'slider',\n        xAxisIndex: 0,\n        filterMode: 'empty'\n      },\n      {\n        type: 'slider',\n        yAxisIndex: 0,\n        filterMode: 'empty'\n      },\n      {\n        type: 'inside',\n        xAxisIndex: 0,\n        filterMode: 'empty'\n      },\n      {\n        type: 'inside',\n        yAxisIndex: 0,\n        filterMode: 'empty'\n      }\n    ],\n    series: [\n      {\n        id: 'a',\n        type: 'line',\n        smooth: true,\n        symbolSize: SymbolSize,\n        data: Data\n      }\n    ]\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    if (this.updatePosition) {\n      window.removeEventListener('resize', this.updatePosition);\n    }\n  }\n\n  onChartReady(myChart: echarts.ECharts) {\n    const onPointDragging = function (dataIndex) {\n      Data[dataIndex] = myChart.convertFromPixel({ gridIndex: 0 }, this.position) as number[];\n\n      // Update data\n      myChart.setOption({\n        series: [{\n          id: 'a',\n          data: Data\n        }]\n      });\n    };\n\n    const showTooltip = function (dataIndex) {\n      myChart.dispatchAction({\n        type: 'showTip',\n        seriesIndex: 0,\n        dataIndex: dataIndex\n      });\n    };\n\n    const hideTooltip = function () {\n      myChart.dispatchAction({\n        type: 'hideTip'\n      });\n    };\n\n    const updatePosition = function () {\n      myChart.setOption({\n        graphic: echarts.util.map(Data, function (item) {\n          return {\n            position: myChart.convertToPixel({ gridIndex: 0 }, item)\n          };\n        })\n      });\n    };\n\n    window.addEventListener('resize', updatePosition);\n    myChart.on('dataZoom', updatePosition);\n\n    // save handler and remove it on destroy\n    this.updatePosition = updatePosition;\n\n    setTimeout(() => {\n      myChart.setOption({\n        graphic: echarts.util.map(Data, (item, dataIndex) => {\n          return {\n            type: 'circle',\n            position: myChart.convertToPixel({ gridIndex: 0 }, item),\n            shape: {\n              cx: 0,\n              cy: 0,\n              r: SymbolSize / 2\n            },\n            invisible: true,\n            draggable: true,\n            ondrag: echarts.util.curry(onPointDragging, dataIndex),\n            onmousemove: echarts.util.curry(showTooltip, dataIndex),\n            onmouseout: echarts.util.curry(hideTooltip, dataIndex),\n            z: 100\n          };\n        })\n      });\n    }, 0);\n  }\n\n}\n"},"Yl6+":function(n,e){n.exports="export const TREE_OPTION = {\n  tooltip: {\n    trigger: 'item',\n    triggerOn: 'mousemove'\n  },\n  legend: {\n    top: '2%',\n    left: '3%',\n    orient: 'vertical',\n    data: [{\n      name: 'tree1',\n      icon: 'rectangle'\n    },\n    {\n      name: 'tree2',\n      icon: 'rectangle'\n    }],\n    borderColor: '#c23531'\n  },\n  series: [\n    {\n      type: 'tree',\n      name: 'tree1',\n      data: [],\n      top: '5%',\n      left: '7%',\n      bottom: '2%',\n      right: '60%',\n\n      symbolSize: 7,\n\n      label: {\n        normal: {\n          position: 'left',\n          verticalAlign: 'middle',\n          align: 'right'\n        }\n      },\n\n      leaves: {\n        label: {\n          normal: {\n            position: 'right',\n            verticalAlign: 'middle',\n            align: 'left'\n          }\n        }\n      },\n\n      expandAndCollapse: true,\n\n      animationDuration: 550,\n      animationDurationUpdate: 750\n\n    },\n    {\n      type: 'tree',\n      name: 'tree2',\n      data: [],\n      top: '20%',\n      left: '60%',\n      bottom: '22%',\n      right: '18%',\n\n      symbolSize: 7,\n\n      label: {\n        normal: {\n          position: 'left',\n          verticalAlign: 'middle',\n          align: 'right'\n        }\n      },\n\n      leaves: {\n        label: {\n          normal: {\n            position: 'right',\n            verticalAlign: 'middle',\n            align: 'left'\n          }\n        }\n      },\n\n      expandAndCollapse: true,\n      animationDuration: 550,\n      animationDurationUpdate: 750\n    }\n  ]\n};\n\nexport const TREE_DATA_1 = {\n  'name': 'flare',\n  'children': [\n    {\n      'name': 'data',\n      'children': [\n        {\n          'name': 'converters',\n          'children': [\n            { 'name': 'Converters', 'value': 721 },\n            { 'name': 'DelimitedTextConverter', 'value': 4294 }\n          ]\n        },\n        {\n          'name': 'DataUtil',\n          'value': 3322\n        }\n      ]\n    },\n    {\n      'name': 'display',\n      'children': [\n        { 'name': 'DirtySprite', 'value': 8833 },\n        { 'name': 'LineSprite', 'value': 1732 },\n        { 'name': 'RectSprite', 'value': 3623 }\n      ]\n    },\n    {\n      'name': 'flex',\n      'children': [\n        { 'name': 'FlareVis', 'value': 4116 }\n      ]\n    },\n    {\n      'name': 'query',\n      'children': [\n        { 'name': 'AggregateExpression', 'value': 1616 },\n        { 'name': 'And', 'value': 1027 },\n        { 'name': 'Arithmetic', 'value': 3891 },\n        { 'name': 'Average', 'value': 891 },\n        { 'name': 'BinaryExpression', 'value': 2893 },\n        { 'name': 'Comparison', 'value': 5103 },\n        { 'name': 'CompositeExpression', 'value': 3677 },\n        { 'name': 'Count', 'value': 781 },\n        { 'name': 'DateUtil', 'value': 4141 },\n        { 'name': 'Distinct', 'value': 933 },\n        { 'name': 'Expression', 'value': 5130 },\n        { 'name': 'ExpressionIterator', 'value': 3617 },\n        { 'name': 'Fn', 'value': 3240 },\n        { 'name': 'If', 'value': 2732 },\n        { 'name': 'IsA', 'value': 2039 },\n        { 'name': 'Literal', 'value': 1214 },\n        { 'name': 'Match', 'value': 3748 },\n        { 'name': 'Maximum', 'value': 843 },\n        {\n          'name': 'methods',\n          'children': [\n            { 'name': 'add', 'value': 593 },\n            { 'name': 'and', 'value': 330 },\n            { 'name': 'average', 'value': 287 },\n            { 'name': 'count', 'value': 277 },\n            { 'name': 'distinct', 'value': 292 },\n            { 'name': 'div', 'value': 595 },\n            { 'name': 'eq', 'value': 594 },\n            { 'name': 'fn', 'value': 460 },\n            { 'name': 'gt', 'value': 603 },\n            { 'name': 'gte', 'value': 625 },\n            { 'name': 'iff', 'value': 748 },\n            { 'name': 'isa', 'value': 461 },\n            { 'name': 'lt', 'value': 597 },\n            { 'name': 'lte', 'value': 619 },\n            { 'name': 'max', 'value': 283 },\n            { 'name': 'min', 'value': 283 },\n            { 'name': 'mod', 'value': 591 },\n            { 'name': 'mul', 'value': 603 },\n            { 'name': 'neq', 'value': 599 },\n            { 'name': 'not', 'value': 386 },\n            { 'name': 'or', 'value': 323 },\n            { 'name': 'orderby', 'value': 307 },\n            { 'name': 'range', 'value': 772 },\n            { 'name': 'select', 'value': 296 },\n            { 'name': 'stddev', 'value': 363 },\n            { 'name': 'sub', 'value': 600 },\n            { 'name': 'sum', 'value': 280 },\n            { 'name': 'update', 'value': 307 },\n            { 'name': 'variance', 'value': 335 },\n            { 'name': 'where', 'value': 299 },\n            { 'name': 'xor', 'value': 354 },\n            { 'name': '_', 'value': 264 }\n          ]\n        },\n        { 'name': 'Minimum', 'value': 843 },\n        { 'name': 'Not', 'value': 1554 },\n        { 'name': 'Or', 'value': 970 },\n        { 'name': 'Query', 'value': 13896 },\n        { 'name': 'Range', 'value': 1594 },\n        { 'name': 'StringUtil', 'value': 4130 },\n        { 'name': 'Sum', 'value': 791 },\n        { 'name': 'Variable', 'value': 1124 },\n        { 'name': 'Variance', 'value': 1876 },\n        { 'name': 'Xor', 'value': 1101 }\n      ]\n    },\n    {\n      'name': 'scale',\n      'children': [\n        { 'name': 'IScaleMap', 'value': 2105 },\n        { 'name': 'LinearScale', 'value': 1316 },\n        { 'name': 'LogScale', 'value': 3151 },\n        { 'name': 'OrdinalScale', 'value': 3770 },\n        { 'name': 'QuantileScale', 'value': 2435 },\n        { 'name': 'QuantitativeScale', 'value': 4839 },\n        { 'name': 'RootScale', 'value': 1756 },\n        { 'name': 'Scale', 'value': 4268 },\n        { 'name': 'ScaleType', 'value': 1821 },\n        { 'name': 'TimeScale', 'value': 5833 }\n      ]\n    }\n  ]\n};\n\nexport const TREE_DATA_2 = {\n  'name': 'flare',\n  'children': [\n    {\n      'name': 'flex',\n      'children': [\n        { 'name': 'FlareVis', 'value': 4116 }\n      ]\n    },\n    {\n      'name': 'scale',\n      'children': [\n        { 'name': 'IScaleMap', 'value': 2105 },\n        { 'name': 'LinearScale', 'value': 1316 },\n        { 'name': 'LogScale', 'value': 3151 },\n        { 'name': 'OrdinalScale', 'value': 3770 },\n        { 'name': 'QuantileScale', 'value': 2435 },\n        { 'name': 'QuantitativeScale', 'value': 4839 },\n        { 'name': 'RootScale', 'value': 1756 },\n        { 'name': 'Scale', 'value': 4268 },\n        { 'name': 'ScaleType', 'value': 1821 },\n        { 'name': 'TimeScale', 'value': 5833 }\n      ]\n    },\n    {\n      'name': 'display',\n      'children': [\n        { 'name': 'DirtySprite', 'value': 8833 }\n      ]\n    }\n  ]\n};\n"},cSxc:function(n,e){n.exports="import { Component, OnInit } from '@angular/core';\n\ndeclare const require: any;\n\n@Component({\n  selector: 'app-graph-simple-demo',\n  templateUrl: './graph-simple-demo.component.html',\n  styleUrls: ['./graph-simple-demo.component.scss']\n})\nexport class GraphSimpleDemoComponent implements OnInit {\n  demo_html = require('!!html-loader!./graph-simple-demo.component.html');\n  demo_ts = require('!!raw-loader!./graph-simple-demo.component.ts');\n\n  options = {\n    title: {\n      text: 'Simple Graph'\n    },\n    tooltip: {},\n    animationDurationUpdate: 1500,\n    animationEasingUpdate: 'quinticInOut',\n    series: [\n      {\n        type: 'graph',\n        layout: 'none',\n        symbolSize: 60,\n        roam: true,\n        label: {\n          normal: {\n            show: true\n          }\n        },\n        edgeSymbol: ['circle', 'arrow'],\n        edgeSymbolSize: [4, 10],\n        edgeLabel: {\n          normal: {\n            textStyle: {\n              fontSize: 20\n            }\n          }\n        },\n        data: [{\n          name: 'Node 1',\n          x: 300,\n          y: 300\n        }, {\n          name: 'Node 2',\n          x: 800,\n          y: 300\n        }, {\n          name: 'Node 3',\n          x: 550,\n          y: 100\n        }, {\n          name: 'Node 4',\n          x: 550,\n          y: 500\n        }],\n        // links: [],\n        links: [{\n          source: 0,\n          target: 1,\n          symbolSize: [5, 20],\n          label: {\n            normal: {\n              show: true\n            }\n          },\n          lineStyle: {\n            normal: {\n              width: 5,\n              curveness: 0.2\n            }\n          }\n        }, {\n          source: 'Node 2',\n          target: 'Node 1',\n          label: {\n            normal: {\n              show: true\n            }\n          },\n          lineStyle: {\n            normal: { curveness: 0.2 }\n          }\n        }, {\n          source: 'Node 1',\n          target: 'Node 3'\n        }, {\n          source: 'Node 2',\n          target: 'Node 3'\n        }, {\n          source: 'Node 2',\n          target: 'Node 4'\n        }, {\n          source: 'Node 1',\n          target: 'Node 4'\n        }],\n        lineStyle: {\n          normal: {\n            opacity: 0.9,\n            width: 2,\n            curveness: 0\n          }\n        }\n      }\n    ]\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"},eolA:function(n,e){n.exports="import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EChartOption } from 'echarts';\nimport { parse } from 'echarts/extension/dataTool/gexf';\n\ndeclare const require: any;\n\n@Component({\n  selector: 'app-graph-force-layout-demo',\n  templateUrl: './graph-force-layout-demo.component.html',\n  styleUrls: ['./graph-force-layout-demo.component.scss']\n})\nexport class GraphForceLayoutDemoComponent implements OnInit {\n  demo_html = require('!!html-loader!./graph-force-layout-demo.component.html');\n  demo_ts = require('!!raw-loader!./graph-force-layout-demo.component.ts');\n\n  options: Observable<EChartOption>;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.options = this.http.get('assets/data/les-miserables.gexf', { responseType: 'text' }).pipe(\n      map(xml => {\n        const graph = parse(xml);\n        const categories = [];\n        for (let i = 0; i < 9; i++) {\n          categories[i] = {\n            name: 'category' + i\n          };\n        }\n        graph.nodes.forEach(function (node) {\n          node.itemStyle = null;\n          node.symbolSize = 10;\n          node.value = node.symbolSize;\n          node.category = node.attributes.modularity_class;\n          // Use random x, y\n          node.x = node.y = null;\n          node.draggable = true;\n        });\n        return {\n          title: {\n            text: 'Les Miserables',\n            subtext: 'Default layout',\n            top: 'bottom',\n            left: 'right'\n          },\n          tooltip: {},\n          legend: [{\n            data: categories.map(function (a) {\n              return a.name;\n            })\n          }] as EChartOption.Legend,\n          animation: false,\n          series: [\n            {\n              name: 'Les Miserables',\n              type: 'graph',\n              layout: 'force',\n              data: graph.nodes,\n              links: graph.links,\n              categories: categories,\n              roam: true,\n              label: {\n                normal: {\n                  position: 'right'\n                }\n              },\n              force: {\n                repulsion: 100\n              }\n            }\n          ]\n        };\n      })\n    );\n  }\n\n}\n"},fYvU:function(n,e){n.exports="import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as echarts from 'echarts';\n\ndeclare const require: any;\n\n@Component({\n  selector: 'app-hongkong-pd',\n  templateUrl: './hongkong-pd.component.html',\n  styleUrls: ['./hongkong-pd.component.scss']\n})\nexport class HongkongPdComponent implements OnInit {\n  demo_html = require('!!html-loader!./hongkong-pd.component.html');\n  demo_ts = require('!!raw-loader!./hongkong-pd.component.ts');\n\n  // show loading spinner:\n  mapLoaded = false;\n  // empty option before geoJSON loaded:\n  options = {};\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    // fetch map geo JSON data from server\n    this.http.get('assets/data/HK.json')\n      .subscribe(geoJson => {\n        // hide loading:\n        this.mapLoaded = true;\n        // register map:\n        echarts.registerMap('HK', geoJson);\n        // update options:\n        this.options = {\n          title: {\n            text: '\u9999\u6e2f18\u533a\u4eba\u53e3\u5bc6\u5ea6 \uff082011\uff09',\n            subtext: '\u4eba\u53e3\u5bc6\u5ea6\u6570\u636e\u6765\u81eaWikipedia',\n            sublink: 'http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: '{b}<br/>{c} (p / km2)'\n          },\n          toolbox: {\n            show: true,\n            orient: 'vertical',\n            left: 'right',\n            top: 'center',\n            feature: {\n              dataView: { readOnly: false },\n              restore: {},\n              saveAsImage: {}\n            }\n          },\n          visualMap: {\n            min: 800,\n            max: 50000,\n            text: ['High', 'Low'],\n            realtime: false,\n            calculable: true,\n            inRange: {\n              color: ['lightskyblue', 'yellow', 'orangered']\n            }\n          },\n          series: [\n            {\n              name: '\u9999\u6e2f18\u533a\u4eba\u53e3\u5bc6\u5ea6',\n              type: 'map',\n              mapType: 'HK', // map type should be registered\n              itemStyle: {\n                normal: { label: { show: true } },\n                emphasis: { label: { show: true } }\n              },\n              data: [\n                { name: '\u4e2d\u897f\u533a', value: 20057.34 },\n                { name: '\u6e7e\u4ed4', value: 15477.48 },\n                { name: '\u4e1c\u533a', value: 31686.1 },\n                { name: '\u5357\u533a', value: 6992.6 },\n                { name: '\u6cb9\u5c16\u65fa', value: 44045.49 },\n                { name: '\u6df1\u6c34\u57d7', value: 40689.64 },\n                { name: '\u4e5d\u9f99\u57ce', value: 37659.78 },\n                { name: '\u9ec4\u5927\u4ed9', value: 45180.97 },\n                { name: '\u89c2\u5858', value: 55204.26 },\n                { name: '\u8475\u9752', value: 21900.9 },\n                { name: '\u8343\u6e7e', value: 4918.26 },\n                { name: '\u5c6f\u95e8', value: 5881.84 },\n                { name: '\u5143\u6717', value: 4178.01 },\n                { name: '\u5317\u533a', value: 2227.92 },\n                { name: '\u5927\u57d4', value: 2180.98 },\n                { name: '\u6c99\u7530', value: 9172.94 },\n                { name: '\u897f\u8d21', value: 3368 },\n                { name: '\u79bb\u5c9b', value: 806.98 }\n              ],\n              nameMap: {\n                'Central and Western': '\u4e2d\u897f\u533a',\n                'Eastern': '\u4e1c\u533a',\n                'Islands': '\u79bb\u5c9b',\n                'Kowloon City': '\u4e5d\u9f99\u57ce',\n                'Kwai Tsing': '\u8475\u9752',\n                'Kwun Tong': '\u89c2\u5858',\n                'North': '\u5317\u533a',\n                'Sai Kung': '\u897f\u8d21',\n                'Sha Tin': '\u6c99\u7530',\n                'Sham Shui Po': '\u6df1\u6c34\u57d7',\n                'Southern': '\u5357\u533a',\n                'Tai Po': '\u5927\u57d4',\n                'Tsuen Wan': '\u8343\u6e7e',\n                'Tuen Mun': '\u5c6f\u95e8',\n                'Wan Chai': '\u6e7e\u4ed4',\n                'Wong Tai Sin': '\u9ec4\u5927\u4ed9',\n                'Yau Tsim Mong': '\u6cb9\u5c16\u65fa',\n                'Yuen Long': '\u5143\u6717'\n              }\n            }\n          ]\n        };\n      });\n  }\n\n}\n"},godf:function(n,e){n.exports="import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { getInstanceByDom, connect } from 'echarts';\n\ndeclare const require: any;\n\nconst CHART_OPTIONS = {\n  color: ['#3398DB'],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  grid: {\n    left: '3%',\n    right: '4%',\n    bottom: '3%',\n    containLabel: true\n  },\n  xAxis: [\n    {\n      type: 'category',\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n      axisTick: {\n        alignWithLabel: true\n      }\n    }\n  ],\n  yAxis: [{\n    type: 'value'\n  }],\n  series: [{\n    name: 'Counters',\n    type: 'bar',\n    barWidth: '60%',\n    data: [10, 52, 200, 334, 390, 330, 220]\n  }]\n};\n\n@Component({\n  selector: 'app-connect-charts',\n  templateUrl: './connect-charts.component.html',\n  styleUrls: ['./connect-charts.component.scss']\n})\nexport class ConnectChartsComponent implements OnInit, AfterViewInit {\n  demo_html = require('!!html-loader!./connect-charts.component.html');\n  demo_ts = require('!!raw-loader!./connect-charts.component.ts');\n  options = CHART_OPTIONS;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      const chartElement1 = <HTMLDivElement>document.getElementById('chart1');\n      const chartElement2 = <HTMLDivElement>document.getElementById('chart2');\n      const chart1 = getInstanceByDom(chartElement1);\n      const chart2 = getInstanceByDom(chartElement2);\n      connect([chart1, chart2]);\n    });\n  }\n\n}\n"},i9Qy:function(n,e){n.exports="declare namespace echarts {\n  const util: any;\n}"},lkLT:function(n,e){n.exports="import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Document codes\nimport { MAIN_CODE } from './main';\nimport { TSCONFIG_CODE } from './tsconfig';\n\ndeclare const require: any;\n\n@Component({\n  selector: 'app-bar3d-demo',\n  templateUrl: './bar3d-demo.component.html',\n  styleUrls: ['./bar3d-demo.component.scss']\n})\nexport class Bar3dDemoComponent implements OnInit {\n  demo_html = require('!!html-loader!./bar3d-demo.component.html');\n  demo_ts = require('!!raw-loader!./bar3d-demo.component.ts');\n  demo_main = MAIN_CODE;\n  demo_config = TSCONFIG_CODE;\n\n  options: Observable<any>;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.options = this.http.get('assets/data/life-expectancy-table.json', { responseType: 'json' }).pipe(\n      map(data => ({\n        grid3D: {},\n        tooltip: {},\n        xAxis3D: {\n          type: 'category'\n        },\n        yAxis3D: {\n          type: 'category'\n        },\n        zAxis3D: {},\n        visualMap: {\n          max: 1e8,\n          dimension: 'Population'\n        },\n        dataset: {\n          dimensions: [\n            'Income',\n            'Life Expectancy',\n            'Population',\n            'Country',\n            { name: 'Year', type: 'ordinal' }\n          ],\n          source: data\n        },\n        series: [\n          {\n            type: 'bar3D',\n            // symbolSize: symbolSize,\n            shading: 'lambert',\n            encode: {\n              x: 'Year',\n              y: 'Country',\n              z: 'Life Expectancy',\n              tooltip: [0, 1, 2, 3, 4]\n            }\n          }\n        ]\n      }))\n    );\n  }\n\n}\n"},"v+jR":function(n,e){n.exports='<div class="card card-accent-info">\n  <div class="card-body">\n    \x3c!-- Chart --\x3e\n    <div echarts [options]="options" class="demo-chart"></div>\n  </div>\n</div>\n\n\x3c!-- Documents --\x3e\n<div class="row mt-4">\n  <div class="col">\n    <tabset>\n      <tab heading="html">\n        <markdown [data]="demo_html | language: \'html\'"></markdown>\n      </tab>\n      <tab heading="component">\n        <markdown [data]="demo_ts | language: \'typescript\'"></markdown>\n      </tab>\n    </tabset>\n  </div>\n</div>'},xt61:function(n,e){n.exports='<div class="card card-accent-info">\n  <div class="card-body">\n    <h4 class="card-title">Connect 2 Charts</h4>\n    <div class="mt-4">\n      <tabset>\n        <tab heading="demo">\n          <div class="row">\n            <div class="col-md-6">\n              <h5> id=chart1 </h5>\n              <div id="chart1" echarts [options]="options" theme="macarons" class="demo-chart"></div>\n            </div>\n            <div class="col-md-6">\n              <h5> id=chart2 </h5>\n              <div id="chart2" echarts [options]="options" theme="macarons" class="demo-chart"></div>\n            </div>\n          </div>\n        </tab>\n        <tab heading="html">\n          <markdown [data]="demo_html | language: \'html\'"></markdown>\n        </tab>\n        <tab heading="component">\n          <markdown [data]="demo_ts | language: \'typescript\'"></markdown>\n        </tab>\n      </tabset>\n    </div>\n  </div>\n</div>\n  '}}]);